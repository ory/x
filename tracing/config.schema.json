{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "ory://tracing-config",
  "type": "object",
  "additionalProperties": false,
  "description": "Configure distributed tracing.",
  "properties": {
    "provider": {
      "type": "string",
      "description": "Set this to the tracing backend you wish to use. Supports Jaeger, Zipkin DataDog, Elastic APM and Instana. If omitted or empty, tracing will be disabled. Use environment variables to configure DataDog (see https://docs.datadoghq.com/tracing/setup/go/#configuration).",
      "enum": ["jaeger", "zipkin", "datadog", "elastic-apm", "instana"],
      "examples": ["jaeger"]
    },
    "service_name": {
      "type": "string",
      "description": "Specifies the service name to use on the tracer.",
      "examples": ["Ory Hydra", "Ory Kratos", "Ory Keto", "Ory Oathkeeper"]
    },
    "providers": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "jaeger": {
          "type": "object",
          "additionalProperties": false,
          "description": "Configures the jaeger tracing backend.",
          "properties": {
            "local_agent_address": {
              "type": "string",
              "description": "The address of the jaeger-agent where spans should be sent to.",
              "oneOf": [
                {
                  "pattern": "^\\[(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))]:([0-9]*)$"
                },
                {
                  "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}:([0-9]*)$"
                },
                {
                  "format": "uri"
                }
              ],
              "examples": ["127.0.0.1:6831"]
            },
            "propagation": {
              "type": "string",
              "description": "The tracing header format",
              "examples": ["jaeger"]
            },
            "max_tag_value_length": {
              "type": "integer",
              "description": "The value passed to the max tag value length that has been configured.",
              "minimum": 0
            },
            "sampling": {
              "type": "object",
              "propertyNames": {
                "enum": ["type", "value", "server_url"]
              },
              "allOf": [
                {
                  "oneOf": [
                    {
                      "properties": {
                        "type": {
                          "description": "The type of the sampler you want to use.",
                          "const": "const"
                        },
                        "value": {
                          "type": "integer",
                          "description": "The value passed to the sampler type that has been configured.",
                          "minimum": 0,
                          "maximum": 1
                        }
                      }
                    },
                    {
                      "properties": {
                        "type": {
                          "description": "The type of the sampler you want to use.",
                          "const": "rateLimiting"
                        },
                        "value": {
                          "type": "integer",
                          "description": "The value passed to the sampler type that has been configured.",
                          "minimum": 0
                        }
                      }
                    },
                    {
                      "properties": {
                        "type": {
                          "description": "The type of the sampler you want to use.",
                          "const": "probabilistic"
                        },
                        "value": {
                          "type": "number",
                          "description": "The value passed to the sampler type that has been configured.",
                          "minimum": 0,
                          "maximum": 1
                        }
                      }
                    }
                  ]
                },
                {
                  "properties": {
                    "server_url": {
                      "type": "string",
                      "description": "The address of jaeger-agent's HTTP sampling server",
                      "format": "uri"
                    }
                  }
                }
              ],
              "examples": [
                {
                  "type": "const",
                  "value": 1,
                  "server_url": "http://localhost:5778/sampling"
                }
              ]
            }
          }
        },
        "zipkin": {
          "type": "object",
          "additionalProperties": false,
          "description": "Configures the zipkin tracing backend.",
          "properties": {
            "server_url": {
              "type": "string",
              "description": "The address of Zipkin server where spans should be sent to.",
              "format": "uri"
            }
          },
          "examples": [
            {
              "server_url": "http://localhost:9411/api/v2/spans"
            }
          ]
        }
      }
    }
  }
}
